{
    // General Settings
    "retry" : 10,        // http retry delay in seconds
    "daemon": true,
    "verbosity" : 3,     // log verbosity (0=log_alert, 1=log_error, 3=log_warning, 5=log_info, 10=log_debug, 15=log_finest)
    "log" : "/cfg/log/vzlogger.log",
 
    // Build-in HTTP server
    "local" : {
         "enabled" : false,   // enable local HTTPd for serving live readings
         "port" : 8081,
         "index" : true,      // provide index listing of available channels if no UUID was requested
         "timeout" : 30,
         "buffer" : 600
    },


    // mqtt client support (if ENABLE_MQTT set at cmake generation)
    "mqtt": {
        "enabled": true,  // enable mqtt client. needs host and port as well
        "host": "{mqtt_broker}", // mqtt server addr
        "port": {mqtt_port}, // 1883 for unencrypted, 8883 enc, 8884 enc cert needed,
        "cafile": "", // optional file with server CA
        "capath": "", // optional path for server CAs. see mosquitto.conf. Specify only cafile or capath
        "certfile": "", // optional file for your client certificate (e.g. client.crt)
        "keyfile": "", // optional path for your client certficate private key (e.g. client.key)
        "keypass": "", // optional password for your private key
        "keepalive": 30, // optional keepalive in seconds.
        "topic": "{mqtt_topic}", // optional topic dont use $ at start and no / at end
        "user": "{mqtt_username}", // optional user name for the mqtt server
        "pass": "{mqtt_password}", // optional password for the mqtt server
        "retain": false, // optional use retain message flag
        "rawAndAgg": false, // optional publish raw values even if agg mode is used
        "qos": 0, // optional quality of service, default is 0
        "timestamp": false // optional whether to include a timestamp in the payload
    },


"meters" : [{
         "protocol" : "{meter_protocol}",
         "enabled" : true,
         "device" : "{meter_device}",
         "parity" : "{meter_parity}",
         "baudrate" : {meter_bautrate},
         "aggtime" : {meter_aggtime},    // aggregate meter readings and send middleware update after <aggtime> seconds
         "aggfixedinterval" : true, // round timestamps to nearest <aggtime> before sending to middleware
         "duplicates" : 60,
         "channels": [{
                 "uuid" : "004caee0-1eef-4428-9353-41b01fb27788",
                 "api" : "null",
                 "identifier" : "1-0:16.7.0*255",
                 "aggmode" : "avg"
          },
         {
                 "uuid" : "3b0066bf-2485-4e29-881c-36bb60bf18f5",
                 "api" : "null",
                 "identifier" : "1-0:1.8.0*255",
                 "aggmode" : "max"
          }]
     },{
         "protocol" : "{meter_protocol}",
         "enabled" : {meter_enabled2},
         "device" : "{meter_device2}",
         "parity" : "{meter_parity}",
         "baudrate" : {meter_baudrate},
         "aggtime" : {meter_aggtime},
         "aggfixedinterval" : true,
         "duplicates" : 60,
         "channels": [{
                 "uuid" : "240063c5-4c32-48e7-bb94-575772e36564",
                 "api" : "null",
                 "identifier" : "1-0:16.7.0*255",
                 "aggmode" : "avg"
          },
         {
                 "uuid" : "4b32406f-0b0b-437b-a56a-400a34cb898e",
                 "api" : "null",
                 "identifier" : "1-0:1.8.0*255",
                 "aggmode" : "max"
          }]
     }]
}
